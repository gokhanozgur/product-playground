// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductPlayground.Persistence.Context;

#nullable disable

namespace ProductPlayground.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("CategoriesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CategoryProduct");
                });

            modelBuilder.Entity("ProductPlayground.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 919, DateTimeKind.Local).AddTicks(4134),
                            Name = "Industrial"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 919, DateTimeKind.Local).AddTicks(4172),
                            Name = "Health & Grocery"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 919, DateTimeKind.Local).AddTicks(4188),
                            Name = "Grocery, Clothing & Outdoors"
                        });
                });

            modelBuilder.Entity("ProductPlayground.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 919, DateTimeKind.Local).AddTicks(6502),
                            Name = "Electronic",
                            ParentId = 0,
                            Priority = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 919, DateTimeKind.Local).AddTicks(6506),
                            Name = "Moda",
                            ParentId = 0,
                            Priority = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 919, DateTimeKind.Local).AddTicks(6508),
                            Name = "Computer",
                            ParentId = 1,
                            Priority = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 919, DateTimeKind.Local).AddTicks(6510),
                            Name = "Dress",
                            ParentId = 2,
                            Priority = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 921, DateTimeKind.Local).AddTicks(2013),
                            Name = "Kids, Grocery & Jewelery",
                            ParentId = 3,
                            Priority = 2
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 921, DateTimeKind.Local).AddTicks(2035),
                            Name = "Computers",
                            ParentId = 1,
                            Priority = 7
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 921, DateTimeKind.Local).AddTicks(2041),
                            Name = "Books",
                            ParentId = 2,
                            Priority = 8
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 921, DateTimeKind.Local).AddTicks(2050),
                            Name = "Clothing",
                            ParentId = 2,
                            Priority = 4
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 921, DateTimeKind.Local).AddTicks(2062),
                            Name = "Grocery & Toys",
                            ParentId = 3,
                            Priority = 8
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 921, DateTimeKind.Local).AddTicks(2080),
                            Name = "Electronics, Baby & Garden",
                            ParentId = 1,
                            Priority = 3
                        });
                });

            modelBuilder.Entity("ProductPlayground.Domain.Entities.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 922, DateTimeKind.Local).AddTicks(7396),
                            Description = "Quae.",
                            Title = "Veritatis."
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 922, DateTimeKind.Local).AddTicks(7416),
                            Description = "Officia.",
                            Title = "Mollitia."
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 922, DateTimeKind.Local).AddTicks(7439),
                            Description = "Omnis.",
                            Title = "Consequuntur."
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 922, DateTimeKind.Local).AddTicks(7457),
                            Description = "Distinctio.",
                            Title = "Nobis."
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 922, DateTimeKind.Local).AddTicks(7472),
                            Description = "Aut.",
                            Title = "Hic."
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 922, DateTimeKind.Local).AddTicks(7489),
                            Description = "Neque.",
                            Title = "Minus."
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 922, DateTimeKind.Local).AddTicks(7511),
                            Description = "Laudantium.",
                            Title = "Officiis."
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 922, DateTimeKind.Local).AddTicks(7525),
                            Description = "Possimus.",
                            Title = "Expedita."
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 922, DateTimeKind.Local).AddTicks(7570),
                            Description = "Voluptate.",
                            Title = "Ratione."
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 922, DateTimeKind.Local).AddTicks(7588),
                            Description = "Sapiente.",
                            Title = "Sed."
                        });
                });

            modelBuilder.Entity("ProductPlayground.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 3,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 924, DateTimeKind.Local).AddTicks(2635),
                            Description = "Laboriosam.",
                            Discount = 11.83m,
                            Price = 334.56m,
                            Title = "Ut."
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 2,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 924, DateTimeKind.Local).AddTicks(2657),
                            Description = "Voluptas.",
                            Discount = 30.86m,
                            Price = 1169.18m,
                            Title = "Molestiae."
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 2,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 924, DateTimeKind.Local).AddTicks(2675),
                            Description = "Nihil.",
                            Discount = 28.97m,
                            Price = 1349.63m,
                            Title = "Tenetur."
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 3,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 924, DateTimeKind.Local).AddTicks(2694),
                            Description = "Laborum.",
                            Discount = 18.04m,
                            Price = 818.90m,
                            Title = "Sed."
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 3,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 924, DateTimeKind.Local).AddTicks(2714),
                            Description = "Esse.",
                            Discount = 26.00m,
                            Price = 734.82m,
                            Title = "Culpa."
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 1,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 924, DateTimeKind.Local).AddTicks(2734),
                            Description = "Cumque.",
                            Discount = 10.98m,
                            Price = 1787.88m,
                            Title = "Ea."
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 3,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 924, DateTimeKind.Local).AddTicks(2780),
                            Description = "Perspiciatis.",
                            Discount = 40.00m,
                            Price = 702.34m,
                            Title = "Autem."
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 2,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 924, DateTimeKind.Local).AddTicks(2801),
                            Description = "Quia.",
                            Discount = 46.58m,
                            Price = 1253.13m,
                            Title = "Occaecati."
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 2,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 924, DateTimeKind.Local).AddTicks(2820),
                            Description = "Quibusdam.",
                            Discount = 32.54m,
                            Price = 664.10m,
                            Title = "Sed."
                        },
                        new
                        {
                            Id = 10,
                            BrandId = 3,
                            CreatedDate = new DateTime(2024, 4, 13, 11, 56, 48, 924, DateTimeKind.Local).AddTicks(2838),
                            Description = "Dolor.",
                            Discount = 13.09m,
                            Price = 1184.25m,
                            Title = "Aperiam."
                        });
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.HasOne("ProductPlayground.Domain.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductPlayground.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductPlayground.Domain.Entities.Detail", b =>
                {
                    b.HasOne("ProductPlayground.Domain.Entities.Category", "Category")
                        .WithMany("Details")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProductPlayground.Domain.Entities.Product", b =>
                {
                    b.HasOne("ProductPlayground.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("ProductPlayground.Domain.Entities.Category", b =>
                {
                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}
