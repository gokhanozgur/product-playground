// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProductPlayground.Persistence.Context;

#nullable disable

namespace ProductPlayground.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProductPlayground.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 915, DateTimeKind.Local).AddTicks(4267),
                            Name = "Toys & Industrial"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 915, DateTimeKind.Local).AddTicks(4280),
                            Name = "Sports & Beauty"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 915, DateTimeKind.Local).AddTicks(4294),
                            Name = "Home, Automotive & Computers"
                        });
                });

            modelBuilder.Entity("ProductPlayground.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ParentId")
                        .HasColumnType("integer");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 915, DateTimeKind.Local).AddTicks(5925),
                            Name = "Electronic",
                            ParentId = 0,
                            Priority = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 915, DateTimeKind.Local).AddTicks(5931),
                            Name = "Moda",
                            ParentId = 0,
                            Priority = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 915, DateTimeKind.Local).AddTicks(5933),
                            Name = "Computer",
                            ParentId = 1,
                            Priority = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 915, DateTimeKind.Local).AddTicks(5934),
                            Name = "Dress",
                            ParentId = 2,
                            Priority = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 917, DateTimeKind.Local).AddTicks(125),
                            Name = "Shoes, Grocery & Computers",
                            ParentId = 1,
                            Priority = 8
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 917, DateTimeKind.Local).AddTicks(134),
                            Name = "Garden",
                            ParentId = 4,
                            Priority = 7
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 917, DateTimeKind.Local).AddTicks(171),
                            Name = "Computers",
                            ParentId = 1,
                            Priority = 9
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 917, DateTimeKind.Local).AddTicks(185),
                            Name = "Electronics, Books & Shoes",
                            ParentId = 2,
                            Priority = 5
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 917, DateTimeKind.Local).AddTicks(193),
                            Name = "Garden",
                            ParentId = 2,
                            Priority = 6
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 917, DateTimeKind.Local).AddTicks(199),
                            Name = "Sports",
                            ParentId = 4,
                            Priority = 10
                        });
                });

            modelBuilder.Entity("ProductPlayground.Domain.Entities.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 918, DateTimeKind.Local).AddTicks(6267),
                            Description = "Voluptatem.",
                            Title = "Commodi."
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 918, DateTimeKind.Local).AddTicks(6292),
                            Description = "Iusto.",
                            Title = "Cum."
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 918, DateTimeKind.Local).AddTicks(6311),
                            Description = "Sit.",
                            Title = "Autem."
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 918, DateTimeKind.Local).AddTicks(6325),
                            Description = "Nobis.",
                            Title = "Dignissimos."
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 918, DateTimeKind.Local).AddTicks(6340),
                            Description = "Aut.",
                            Title = "Quo."
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 918, DateTimeKind.Local).AddTicks(6358),
                            Description = "Magnam.",
                            Title = "Id."
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 918, DateTimeKind.Local).AddTicks(6400),
                            Description = "Nemo.",
                            Title = "Quam."
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 918, DateTimeKind.Local).AddTicks(6415),
                            Description = "Praesentium.",
                            Title = "Incidunt."
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 918, DateTimeKind.Local).AddTicks(6430),
                            Description = "Tempore.",
                            Title = "Itaque."
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 918, DateTimeKind.Local).AddTicks(6447),
                            Description = "Maiores.",
                            Title = "Minima."
                        });
                });

            modelBuilder.Entity("ProductPlayground.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Discount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 2,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 920, DateTimeKind.Local).AddTicks(8575),
                            Description = "Optio.",
                            Discount = 14.93m,
                            Price = 1922.19m,
                            Title = "Officia."
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 2,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 920, DateTimeKind.Local).AddTicks(8641),
                            Description = "Sint.",
                            Discount = 39.40m,
                            Price = 169.88m,
                            Title = "Perspiciatis."
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 3,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 920, DateTimeKind.Local).AddTicks(8660),
                            Description = "Iure.",
                            Discount = 12.57m,
                            Price = 1979.92m,
                            Title = "Reprehenderit."
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 3,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 920, DateTimeKind.Local).AddTicks(8682),
                            Description = "Est.",
                            Discount = 15.39m,
                            Price = 1903.35m,
                            Title = "Amet."
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 1,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 920, DateTimeKind.Local).AddTicks(8699),
                            Description = "Dolore.",
                            Discount = 25.83m,
                            Price = 1108.90m,
                            Title = "Quo."
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 3,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 920, DateTimeKind.Local).AddTicks(8717),
                            Description = "Exercitationem.",
                            Discount = 28.56m,
                            Price = 533.04m,
                            Title = "Rerum."
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 3,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 920, DateTimeKind.Local).AddTicks(8733),
                            Description = "Aut.",
                            Discount = 22.06m,
                            Price = 1134.56m,
                            Title = "Eius."
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 1,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 920, DateTimeKind.Local).AddTicks(8751),
                            Description = "Sint.",
                            Discount = 26.19m,
                            Price = 715.87m,
                            Title = "Qui."
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 3,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 920, DateTimeKind.Local).AddTicks(8768),
                            Description = "Alias.",
                            Discount = 16.29m,
                            Price = 433.50m,
                            Title = "Aut."
                        },
                        new
                        {
                            Id = 10,
                            BrandId = 1,
                            CreatedDate = new DateTime(2024, 4, 23, 10, 58, 8, 920, DateTimeKind.Local).AddTicks(8785),
                            Description = "Dignissimos.",
                            Discount = 15.25m,
                            Price = 1826.42m,
                            Title = "Debitis."
                        });
                });

            modelBuilder.Entity("ProductPlayground.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("ProductPlayground.Domain.Entities.Detail", b =>
                {
                    b.HasOne("ProductPlayground.Domain.Entities.Category", "Category")
                        .WithMany("Details")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProductPlayground.Domain.Entities.Product", b =>
                {
                    b.HasOne("ProductPlayground.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("ProductPlayground.Domain.Entities.ProductCategory", b =>
                {
                    b.HasOne("ProductPlayground.Domain.Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductPlayground.Domain.Entities.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProductPlayground.Domain.Entities.Category", b =>
                {
                    b.Navigation("Details");

                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("ProductPlayground.Domain.Entities.Product", b =>
                {
                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
