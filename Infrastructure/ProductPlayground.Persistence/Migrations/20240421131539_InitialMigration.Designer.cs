// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProductPlayground.Persistence.Context;

#nullable disable

namespace ProductPlayground.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240421131539_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductsId")
                        .HasColumnType("integer");

                    b.HasKey("CategoriesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CategoryProduct");
                });

            modelBuilder.Entity("ProductPlayground.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 727, DateTimeKind.Local).AddTicks(5288),
                            Name = "Baby"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 727, DateTimeKind.Local).AddTicks(5317),
                            Name = "Sports & Books"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 727, DateTimeKind.Local).AddTicks(5322),
                            Name = "Computers"
                        });
                });

            modelBuilder.Entity("ProductPlayground.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ParentId")
                        .HasColumnType("integer");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 727, DateTimeKind.Local).AddTicks(6344),
                            Name = "Electronic",
                            ParentId = 0,
                            Priority = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 727, DateTimeKind.Local).AddTicks(6348),
                            Name = "Moda",
                            ParentId = 0,
                            Priority = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 727, DateTimeKind.Local).AddTicks(6349),
                            Name = "Computer",
                            ParentId = 1,
                            Priority = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 727, DateTimeKind.Local).AddTicks(6351),
                            Name = "Dress",
                            ParentId = 2,
                            Priority = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 729, DateTimeKind.Local).AddTicks(408),
                            Name = "Beauty, Sports & Electronics",
                            ParentId = 1,
                            Priority = 7
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 729, DateTimeKind.Local).AddTicks(439),
                            Name = "Home & Outdoors",
                            ParentId = 3,
                            Priority = 9
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 729, DateTimeKind.Local).AddTicks(446),
                            Name = "Health",
                            ParentId = 3,
                            Priority = 10
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 729, DateTimeKind.Local).AddTicks(454),
                            Name = "Outdoors",
                            ParentId = 2,
                            Priority = 3
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 729, DateTimeKind.Local).AddTicks(464),
                            Name = "Kids & Tools",
                            ParentId = 4,
                            Priority = 10
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 729, DateTimeKind.Local).AddTicks(478),
                            Name = "Clothing & Jewelery",
                            ParentId = 2,
                            Priority = 3
                        });
                });

            modelBuilder.Entity("ProductPlayground.Domain.Entities.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 730, DateTimeKind.Local).AddTicks(6982),
                            Description = "Quisquam.",
                            Title = "Sint."
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 730, DateTimeKind.Local).AddTicks(7025),
                            Description = "A.",
                            Title = "Quasi."
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 730, DateTimeKind.Local).AddTicks(7052),
                            Description = "Voluptas.",
                            Title = "Debitis."
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 730, DateTimeKind.Local).AddTicks(7068),
                            Description = "Cupiditate.",
                            Title = "Modi."
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 730, DateTimeKind.Local).AddTicks(7083),
                            Description = "Itaque.",
                            Title = "Rerum."
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 730, DateTimeKind.Local).AddTicks(7099),
                            Description = "Eaque.",
                            Title = "Temporibus."
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 730, DateTimeKind.Local).AddTicks(7118),
                            Description = "Ea.",
                            Title = "Vero."
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 730, DateTimeKind.Local).AddTicks(7134),
                            Description = "Sit.",
                            Title = "Blanditiis."
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 730, DateTimeKind.Local).AddTicks(7149),
                            Description = "Praesentium.",
                            Title = "Sint."
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 730, DateTimeKind.Local).AddTicks(7165),
                            Description = "Vel.",
                            Title = "Aut."
                        });
                });

            modelBuilder.Entity("ProductPlayground.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Discount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 3,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 732, DateTimeKind.Local).AddTicks(2924),
                            Description = "Doloribus.",
                            Discount = 25.94m,
                            Price = 993.35m,
                            Title = "Aliquid."
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 1,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 732, DateTimeKind.Local).AddTicks(2947),
                            Description = "Iste.",
                            Discount = 40.65m,
                            Price = 1909.87m,
                            Title = "In."
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 2,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 732, DateTimeKind.Local).AddTicks(2965),
                            Description = "Excepturi.",
                            Discount = 39.63m,
                            Price = 647.41m,
                            Title = "Praesentium."
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 1,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 732, DateTimeKind.Local).AddTicks(3011),
                            Description = "Iste.",
                            Discount = 45.75m,
                            Price = 1199.61m,
                            Title = "Molestiae."
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 3,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 732, DateTimeKind.Local).AddTicks(3031),
                            Description = "Quis.",
                            Discount = 19.40m,
                            Price = 1038.29m,
                            Title = "Ipsa."
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 3,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 732, DateTimeKind.Local).AddTicks(3050),
                            Description = "Eum.",
                            Discount = 30.47m,
                            Price = 1336.14m,
                            Title = "Et."
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 2,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 732, DateTimeKind.Local).AddTicks(3067),
                            Description = "Maiores.",
                            Discount = 30.82m,
                            Price = 800.21m,
                            Title = "Commodi."
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 2,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 732, DateTimeKind.Local).AddTicks(3084),
                            Description = "Sit.",
                            Discount = 13.66m,
                            Price = 1123.22m,
                            Title = "Voluptatem."
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 3,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 732, DateTimeKind.Local).AddTicks(3103),
                            Description = "Pariatur.",
                            Discount = 36.20m,
                            Price = 447.31m,
                            Title = "Rerum."
                        },
                        new
                        {
                            Id = 10,
                            BrandId = 1,
                            CreatedDate = new DateTime(2024, 4, 21, 16, 15, 38, 732, DateTimeKind.Local).AddTicks(3121),
                            Description = "Consectetur.",
                            Discount = 22.06m,
                            Price = 354.58m,
                            Title = "Quia."
                        });
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.HasOne("ProductPlayground.Domain.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductPlayground.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductPlayground.Domain.Entities.Detail", b =>
                {
                    b.HasOne("ProductPlayground.Domain.Entities.Category", "Category")
                        .WithMany("Details")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProductPlayground.Domain.Entities.Product", b =>
                {
                    b.HasOne("ProductPlayground.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("ProductPlayground.Domain.Entities.Category", b =>
                {
                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}
